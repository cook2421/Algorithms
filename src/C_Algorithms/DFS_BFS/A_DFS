Depth First Search(깊이 우선 탐색)


[정의]
"더 나아갈 길이 보이지 않을 때까지 깊이 들어간다"를 원칙으로 그래프 내의 정점을 방문하는 알고리즘이다.


[요약]
그래프의 정점을 타고 깊이 들어가다가
더 이상 방문해왔던 정점 말고는 다른 이웃을 갖고 있지 않은 정점을 만나면
뒤로 돌아와 다른 경로로 뻗어있는 정점을 타고 방문을 재개하는 방식으로 동작한다.

* 루트 노드(혹은 다른 임의의 노드)에서 시작해서 다음 분기(branch)로 넘어가기 전에 해당 분기를 완벽하게 탐색하는 방법
* 사용하는 경우: 모든 노드를 방문하고자 하는 경우에 이 방법을 선택한다(완전 탐색 알고리즘에 자주 이용됨)


[특징]
* 자기 자신을 호출하는 순환 알고리즘의 형태
* 트리 순회(전위, 중위, 후위 순회)는 모두 DFS의 한 종류
* 그래프 탐색의 경우 어떤 노드를 방문했었는지의 여부를 반드시 검사해야함(안하면 무한루프 빠질 위험 있음)


[구현 방법 2가지]
1. 순환 호출 이용(재귀)     ex) 인접리스트, 인접행렬
2. 명시적인 스택 사용 - 인접한 정점들을 스택에 저장하였다가 다시 꺼내어 작업   ex) 인접행렬


[시간복잡도]
정점의 수가 n이고, 간선의 수가 e인 그래프의 경우
* 그래프가 인접 리스트로 표현된 경우 : O(n+e)
* 그래프가 인접 행렬로 표현된 경우 : O(n^2)


희소 그래프인 경우 인접 리스트의 사용이 인접 행렬보다 유리
(희소 그래프: 그래프 내에 적은 수의 간선을 가지는 그래프로 인접 행렬을 사용하면 메모리의 낭비가 크기 때문)